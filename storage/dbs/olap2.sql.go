// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: olap2.sql

package dbs

import (
	"context"
	"database/sql"
)

const getCubeSupply = `-- name: GetCubeSupply :many
select
sd.supply_details_fact_id,
  sd.detail_dim_id AS "Detail ID",
  sd.detail_quantity AS "Detail Quantity",
  sd.detail_total_cost AS "Detail Total Cost",
  sd.start_date_dim_id AS "Start Date ID",
  sd.end_date_dim_id AS "End Date ID",
  inv.inventory_dim_id AS "Inventory Detail ID",
  inv.description AS "Inventory Description",
  inv.article AS "Article",
  inv.price AS "Price",
  inv.dimensions AS "Dimensions",
  inv.weight AS "Weight",
  supp.supplier_dim_id AS "Supplier ID",
  supp.name AS "Supplier Name",
  supp.phone_number AS "Supplier Phone Number",
  supp.address AS "Supplier Address",
  d.date_id AS "Date Start ID",
  dd.date_id as "Sate End ID",
  d.year AS "Start Year",
  d.month AS "Start Month",
  d.day AS "Start Day",
  dd."day" as "End Day",
  dd."month" as "End Month",
  dd."year" as "End Year"
FROM 
  storage.supply_details_fact sd
JOIN storage.inventory_dim inv
  ON sd.detail_dim_id = inv.inventory_dim_id
JOIN storage.supplier_dim supp
  ON sd.supplier_id = supp.supplier_dim_id
JOIN storage.date_dim d
  ON sd.start_date_dim_id = d.date_id
 JOIN storage.date_dim dd
  ON sd.end_date_dim_id  = dd.date_id
ORDER BY sd.detail_dim_id
`

type GetCubeSupplyRow struct {
	SupplyDetailsFactID  int32
	DetailID             int32
	DetailQuantity       sql.NullInt32
	DetailTotalCost      sql.NullString
	StartDateID          sql.NullInt32
	EndDateID            sql.NullInt32
	InventoryDetailID    int32
	InventoryDescription sql.NullString
	Article              sql.NullString
	Price                sql.NullString
	Dimensions           sql.NullString
	Weight               sql.NullString
	SupplierID           int32
	SupplierName         sql.NullString
	SupplierPhoneNumber  sql.NullString
	SupplierAddress      sql.NullString
	DateStartID          int32
	SateEndID            int32
	StartYear            sql.NullInt32
	StartMonth           sql.NullInt32
	StartDay             sql.NullInt32
	EndDay               sql.NullInt32
	EndMonth             sql.NullInt32
	EndYear              sql.NullInt32
}

func (q *Queries) GetCubeSupply(ctx context.Context) ([]GetCubeSupplyRow, error) {
	rows, err := q.db.QueryContext(ctx, getCubeSupply)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetCubeSupplyRow
	for rows.Next() {
		var i GetCubeSupplyRow
		if err := rows.Scan(
			&i.SupplyDetailsFactID,
			&i.DetailID,
			&i.DetailQuantity,
			&i.DetailTotalCost,
			&i.StartDateID,
			&i.EndDateID,
			&i.InventoryDetailID,
			&i.InventoryDescription,
			&i.Article,
			&i.Price,
			&i.Dimensions,
			&i.Weight,
			&i.SupplierID,
			&i.SupplierName,
			&i.SupplierPhoneNumber,
			&i.SupplierAddress,
			&i.DateStartID,
			&i.SateEndID,
			&i.StartYear,
			&i.StartMonth,
			&i.StartDay,
			&i.EndDay,
			&i.EndMonth,
			&i.EndYear,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
